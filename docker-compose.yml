version: "3"
services:
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
#  cassandra:
#      image: cassandra:latest
#      ports:
#        - '9042:9042'
#  zookeeper:
#    image: 'bitnami/zookeeper:latest'
#    ports:
#      - '2181:2181'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  kafka:
#    image: 'bitnami/kafka:latest'
#    ports:
#      - '9092:9092'
#    environment:
#      - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#    depends_on:
#      - zookeeper
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=metrics
      - POSTGRES_USER=metrics
      - POSTGRES_DB=metrics
  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - "3000:3000"
  main:
    build:
      context: .
    volumes:
      - .:/code
    ports:
      - '4040:4040'
    command:
      - "./spark-submit.sh"
    depends_on:
      - spark-master
  main_click:
    build:
      context: .
    volumes:
      - .:/code
    ports:
      - '4041:4040'
    command:
      - "./spark-submit_click.sh"
    depends_on:
      - spark-master